@model IEnumerable<Order>
@{
    ViewData["Title"] = "Orders";
    short i = 0;
}

<div class="container mt-4">
    <h2 class="mb-4">Orders</h2>

    <table class="table table-striped table-hover">
        <thead class="thead-dark">
            <tr>
                <th scope="col">#</th>
                <th scope="col">Customer Name</th>
                <th scope="col">Shop</th>
                <th scope="col">Order Date</th>
                <th scope="col">Total amount</th>
                <th scope="col">City</th>
                <th scope="col">Address</th>
                <th scope="col">Contact Phone</th>
                <th scope="col">Order Status</th>
                <th scope="col">Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var order in Model)
            {
                <tr>
                    <td>@(++i)</td>
                    <td>@order.User.UserName</td>
                    <td>@order.Shop.Name</td>
                    <td>@order.OrderDate.ToShortDateString()</td>
                    <td>@order.TotalAmount</td>
                    <td>@order.City</td>
                    <td>@order.Address</td>
                    <td>@order.ContactPhone</td>

                    <td>
                        <span id="status-badge-@order.Id" class="badge badge-@GetOrderStatusClass(order.Status)">@order.Status</span>
                    </td>
                    <td>
                        <button class="btn btn-info btn-sm" onclick="toggleProducts('@order.Id')">View</button>
                        <button class="btn btn-warning btn-sm" onclick="changeOrderStatus('@order.Id', 'Pending')">Pending</button>
                        <button class="btn btn-primary btn-sm" onclick="changeOrderStatus('@order.Id', 'Shipped')">Shipped</button>
                        <button class="btn btn-success btn-sm" onclick="changeOrderStatus('@order.Id', 'Completed')">Completed</button>
                        <button class="btn btn-danger btn-sm" onclick="changeOrderStatus('@order.Id', 'Cancelled')"><i class="fa-regular fa-rectangle-xmark"></i></button>
                    </td>
                </tr>
                <tr id="products-@order.Id" style="display:none;">
                    <td colspan="5">
                        <div class="table-responsive">
                            <table class="table table-bordered mt-2">
                                <thead class="thead-light">
                                    <tr>
                                        <th>Product Name</th>
                                        <th>Quantity</th>
                                        <th>Price</th>
                                        <th>Total</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var product in order.OrderProducts)
                                    {
                                        <tr>
                                            <td>@product.Product.ProductName</td>
                                            <td>@product.Quantity</td>
                                            <td>جنيه @product.Product.DiscountedPrice</td>
                                            <td>جنيه @(product.Product.DiscountedPrice * product.Quantity)</td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<script>
    function toggleProducts(orderId) {
        var productsRow = $("#products-" + orderId);
        if (productsRow.is(":visible")) {
            // Smoothly hide the products row
            productsRow.slideUp(300); // 300 ms for sliding up
        } else {
            // Smoothly show the products row
            productsRow.slideDown(300); // 300 ms for sliding down
        }
    }

    function changeOrderStatus(orderId, status) {
        $.ajax({
            url: '@Url.Action("MarkStatus", "Order")', // Adjust based on your controller/action
            type: 'POST',
            data: {
                id: orderId,
                status: status
            },
            success: function (response) {
                // Update the status badge dynamically
                var badge = document.getElementById('status-badge-' + orderId);
                badge.innerText = status;
                badge.className = 'badge badge-' + getStatusClass(status); // Change the badge color
            },
            error: function (xhr, status, error) {
                console.log('Error:', error);
            }
        });
    }

    function getStatusClass(status) {
        switch (status) {
            case "Completed":
                return "success";
            case "Pending":
                return "warning";
            case "Shipped":
                return "info";
            case "Cancelled":
                return "danger";
            default:
                return "warning";
        }
    }
</script>

<style>
    .badge-success {
        background-color: #28a745;
    }

    .badge-warning {
        background-color: #ffc107;
    }

    .badge-danger {
        background-color: #dc3545;
    }

    .badge-info {
        background-color: #17a2b8;
    }
</style>

@functions {
    private string GetOrderStatusClass(string status)
    {
        return status switch
        {
            "Completed" => "success",
            "Pending" => "warning",
            "Shipped" => "info",
            "Cancelled" => "danger",

            _ => "warning",
        };
    }
}
